#PiTank
# import curses and GPIO
import curses
import RPi.GPIO as GPIO
import os #added so we can shut down OK
import time #import time module
import socket #for network stream
import picamera
import pygame
from datetime import datetime

#set GPIO numbering mode and define output pins
GPIO.setmode(GPIO.BOARD)
GPIO.setup(16,GPIO.OUT)
GPIO.setup(18,GPIO.OUT)
GPIO.setup(13,GPIO.OUT)
GPIO.setup(15,GPIO.OUT)
GPIO.setup(12,GPIO.OUT)


#setup music
pygame.mixer.init()
pygame.mixer.music.load("/home/pi/Music/rollin.mp3")

#setup camera
camera = picamera.PiCamera()
camera.resolution = (640, 480)
camera.framerate = 24

#setup network stream
server_socket = socket.socket()
server_socket.bind(('*Your Rpi IP*', 8000))
server_socket.listen(0)

record = 0 #set up a variable to be set to 1 when recording
connection = server_socket.accept()[0].makefile('wb')


# Get the curses window, turn off echoing of keyboard to screen, turn on
# instant (no waiting) key response, and use special values for cursor keys
screen = curses.initscr()
curses.noecho() 
curses.cbreak()
screen.keypad(True)

#Lets you know when the Pi is fully started
for x in range(1, 10):
        GPIO.output(12, False)
        time.sleep(.5)
        GPIO.output(12,True)
        time.sleep(1)
try:
        while True:
            char = screen.getch()
            if char == ord('q'):
                break
            if char == ord('S'): # Added for shutdown on capital S
                os.system ('sudo shutdown now') # shutdown right now!
            elif char == ord('r'):
                moment = datetime.now()
                GPIO.output(12, False)
                camera.start_recording(connection, format='h264')                
            elif char == ord('t'):
                moment = datetime.now()
                GPIO.output(12, True)
                camera.stop_recording()
            elif char == ord('p'):
                pygame.mixer.music.play(start=15)
            elif char == ord('l'):
                pygame.mixer.music.stop()    
            elif char == curses.KEY_UP:
                GPIO.output(16,False)
                GPIO.output(18,True)
                GPIO.output(13,False)
                GPIO.output(15,True)
            elif char == curses.KEY_DOWN:
                GPIO.output(16,True)
                GPIO.output(18,False)
                GPIO.output(13,True)
                GPIO.output(15,False)
            elif char == curses.KEY_RIGHT:
                GPIO.output(16,True)
                GPIO.output(18,False)
                GPIO.output(13,False)
                GPIO.output(15,True)
            elif char == curses.KEY_LEFT:
                GPIO.output(16,False)
                GPIO.output(18,True)
                GPIO.output(13,True)
                GPIO.output(15,False)
            elif char == 10:
                GPIO.output(16,False)
                GPIO.output(18,False)
                GPIO.output(13,False)
                GPIO.output(15,False)
             
finally:
    #Close down curses properly, inc turn echo back on!
    curses.nocbreak(); screen.keypad(0); curses.echo()
    curses.endwin()
    GPIO.cleanup()
    server_socket.close()
    connection.close()